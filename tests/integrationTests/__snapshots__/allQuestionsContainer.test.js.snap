// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<All questions /> renders the cardlayout component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <QuestionLayout
    match={[MockFunction]}
    question={
      Object {
        "author": "Lucas",
        "qn_id": 3,
        "title": "now",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="row"
        >
          <div
            className=" col-xs-12 col-md-12 qn-title"
          >
            <NavLink
              activeClassName="active"
              aria-current="page"
              to="undefined/3"
            >
              now
            </NavLink>
          </div>
        </div>,
        <div
          className="row"
        >
          <div
            className=" col-xs-12 col-md-12 qn-author"
          >
            Author: 
          </div>
        </div>,
      ],
      "className": "question-layout",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className=" col-xs-12 col-md-12 qn-title"
          >
            <NavLink
              activeClassName="active"
              aria-current="page"
              to="undefined/3"
            >
              now
            </NavLink>
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NavLink
              activeClassName="active"
              aria-current="page"
              to="undefined/3"
            >
              now
            </NavLink>,
            "className": " col-xs-12 col-md-12 qn-title",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": "now",
              "to": "undefined/3",
            },
            "ref": null,
            "rendered": "now",
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className=" col-xs-12 col-md-12 qn-author"
          >
            Author: 
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Author: ",
              undefined,
            ],
            "className": " col-xs-12 col-md-12 qn-author",
          },
          "ref": null,
          "rendered": Array [
            "Author: ",
            undefined,
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="row"
          >
            <div
              className=" col-xs-12 col-md-12 qn-title"
            >
              <NavLink
                activeClassName="active"
                aria-current="page"
                to="undefined/3"
              >
                now
              </NavLink>
            </div>
          </div>,
          <div
            className="row"
          >
            <div
              className=" col-xs-12 col-md-12 qn-author"
            >
              Author: 
            </div>
          </div>,
        ],
        "className": "question-layout",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className=" col-xs-12 col-md-12 qn-title"
            >
              <NavLink
                activeClassName="active"
                aria-current="page"
                to="undefined/3"
              >
                now
              </NavLink>
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <NavLink
                activeClassName="active"
                aria-current="page"
                to="undefined/3"
              >
                now
              </NavLink>,
              "className": " col-xs-12 col-md-12 qn-title",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "now",
                "to": "undefined/3",
              },
              "ref": null,
              "rendered": "now",
              "type": [Function],
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className=" col-xs-12 col-md-12 qn-author"
            >
              Author: 
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Author: ",
                undefined,
              ],
              "className": " col-xs-12 col-md-12 qn-author",
            },
            "ref": null,
            "rendered": Array [
              "Author: ",
              undefined,
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<All questions /> renders the component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AllQuestions
    allQns={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    list={
      Array [
        Object {
          "author": "marcus",
          "title": "now",
        },
        Object {
          "author": "markz",
          "title": "now2",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="row centered page-header"
        >
          <div
            className=" col-xs-6 col-md-6 qnHeader"
          >
            <p>
              All Questions
            </p>
          </div>
          <div
            className=" col-xs-6 col-md-6"
          >
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="qnLink"
              to="/postQuestion"
            >
              Post Question
            </NavLink>
          </div>
        </div>,
        <div
          className="row"
        >
          <div
            className=" col-xs-12 col-md-12 centered"
          >
            <QuestionLayout
              question={
                Object {
                  "author": "marcus",
                  "title": "now",
                }
              }
            />
            <QuestionLayout
              question={
                Object {
                  "author": "markz",
                  "title": "now2",
                }
              }
            />
          </div>
        </div>,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className=" col-xs-6 col-md-6 qnHeader"
            >
              <p>
                All Questions
              </p>
            </div>,
            <div
              className=" col-xs-6 col-md-6"
            >
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="qnLink"
                to="/postQuestion"
              >
                Post Question
              </NavLink>
            </div>,
          ],
          "className": "row centered page-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <p>
                All Questions
              </p>,
              "className": " col-xs-6 col-md-6 qnHeader",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "All Questions",
              },
              "ref": null,
              "rendered": "All Questions",
              "type": "p",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <NavLink
                activeClassName="active"
                aria-current="page"
                className="qnLink"
                to="/postQuestion"
              >
                Post Question
              </NavLink>,
              "className": " col-xs-6 col-md-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "Post Question",
                "className": "qnLink",
                "to": "/postQuestion",
              },
              "ref": null,
              "rendered": "Post Question",
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className=" col-xs-12 col-md-12 centered"
          >
            <QuestionLayout
              question={
                Object {
                  "author": "marcus",
                  "title": "now",
                }
              }
            />
            <QuestionLayout
              question={
                Object {
                  "author": "markz",
                  "title": "now2",
                }
              }
            />
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <QuestionLayout
                question={
                  Object {
                    "author": "marcus",
                    "title": "now",
                  }
                }
              />,
              <QuestionLayout
                question={
                  Object {
                    "author": "markz",
                    "title": "now2",
                  }
                }
              />,
            ],
            "className": " col-xs-12 col-md-12 centered",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "function",
              "props": Object {
                "match": undefined,
                "question": Object {
                  "author": "marcus",
                  "title": "now",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "function",
              "props": Object {
                "match": undefined,
                "question": Object {
                  "author": "markz",
                  "title": "now2",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="row centered page-header"
          >
            <div
              className=" col-xs-6 col-md-6 qnHeader"
            >
              <p>
                All Questions
              </p>
            </div>
            <div
              className=" col-xs-6 col-md-6"
            >
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="qnLink"
                to="/postQuestion"
              >
                Post Question
              </NavLink>
            </div>
          </div>,
          <div
            className="row"
          >
            <div
              className=" col-xs-12 col-md-12 centered"
            >
              <QuestionLayout
                question={
                  Object {
                    "author": "marcus",
                    "title": "now",
                  }
                }
              />
              <QuestionLayout
                question={
                  Object {
                    "author": "markz",
                    "title": "now2",
                  }
                }
              />
            </div>
          </div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className=" col-xs-6 col-md-6 qnHeader"
              >
                <p>
                  All Questions
                </p>
              </div>,
              <div
                className=" col-xs-6 col-md-6"
              >
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="qnLink"
                  to="/postQuestion"
                >
                  Post Question
                </NavLink>
              </div>,
            ],
            "className": "row centered page-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p>
                  All Questions
                </p>,
                "className": " col-xs-6 col-md-6 qnHeader",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "All Questions",
                },
                "ref": null,
                "rendered": "All Questions",
                "type": "p",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="qnLink"
                  to="/postQuestion"
                >
                  Post Question
                </NavLink>,
                "className": " col-xs-6 col-md-6",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "aria-current": "page",
                  "children": "Post Question",
                  "className": "qnLink",
                  "to": "/postQuestion",
                },
                "ref": null,
                "rendered": "Post Question",
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className=" col-xs-12 col-md-12 centered"
            >
              <QuestionLayout
                question={
                  Object {
                    "author": "marcus",
                    "title": "now",
                  }
                }
              />
              <QuestionLayout
                question={
                  Object {
                    "author": "markz",
                    "title": "now2",
                  }
                }
              />
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <QuestionLayout
                  question={
                    Object {
                      "author": "marcus",
                      "title": "now",
                    }
                  }
                />,
                <QuestionLayout
                  question={
                    Object {
                      "author": "markz",
                      "title": "now2",
                    }
                  }
                />,
              ],
              "className": " col-xs-12 col-md-12 centered",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "function",
                "props": Object {
                  "match": undefined,
                  "question": Object {
                    "author": "marcus",
                    "title": "now",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "function",
                "props": Object {
                  "match": undefined,
                  "question": Object {
                    "author": "markz",
                    "title": "now2",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
