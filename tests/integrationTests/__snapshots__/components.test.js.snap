// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> test App component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Switch>
        <Route
          component={[Function]}
          path="/"
        />
      </Switch>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Route
          component={[Function]}
          path="/"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "path": "/",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Switch>
          <Route
            component={[Function]}
            path="/"
          />
        </Switch>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Route
            component={[Function]}
            path="/"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<App /> tests the signup snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignupComponent />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="row"
      >
        <div
          className=" col-xs-12 col-md-6"
        >
          <h1>
            StackOverflow-Lite
          </h1>
          <p>
            A platform where people can ask questions and provide answers.
          </p>
        </div>
        <div
          className=" col-xs-12 col-md-6"
        >
          <form>
            <Input
              htmlFor="Username"
              id="username"
              innerHtml="Username"
              name="username"
              placeholder="Username"
              type="text"
            />
            <Input
              htmlFor="Email"
              id="email"
              innerHtml="Email"
              name="email"
              placeholder="Email"
              type="email"
            />
            <Input
              htmlFor="Password"
              id="password"
              innerHtml="Password"
              name="password"
              placeholder="Password"
              type="password"
            />
            <button
              className="btn btn-default"
              type="submit"
            >
               Submit 
            </button>
          </form>
        </div>
      </div>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className=" col-xs-12 col-md-6"
          >
            <h1>
              StackOverflow-Lite
            </h1>
            <p>
              A platform where people can ask questions and provide answers.
            </p>
          </div>,
          <div
            className=" col-xs-12 col-md-6"
          >
            <form>
              <Input
                htmlFor="Username"
                id="username"
                innerHtml="Username"
                name="username"
                placeholder="Username"
                type="text"
              />
              <Input
                htmlFor="Email"
                id="email"
                innerHtml="Email"
                name="email"
                placeholder="Email"
                type="email"
              />
              <Input
                htmlFor="Password"
                id="password"
                innerHtml="Password"
                name="password"
                placeholder="Password"
                type="password"
              />
              <button
                className="btn btn-default"
                type="submit"
              >
                 Submit 
              </button>
            </form>
          </div>,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                StackOverflow-Lite
              </h1>,
              <p>
                A platform where people can ask questions and provide answers.
              </p>,
            ],
            "className": " col-xs-12 col-md-6",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "StackOverflow-Lite",
              },
              "ref": null,
              "rendered": "StackOverflow-Lite",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "A platform where people can ask questions and provide answers.",
              },
              "ref": null,
              "rendered": "A platform where people can ask questions and provide answers.",
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form>
              <Input
                htmlFor="Username"
                id="username"
                innerHtml="Username"
                name="username"
                placeholder="Username"
                type="text"
              />
              <Input
                htmlFor="Email"
                id="email"
                innerHtml="Email"
                name="email"
                placeholder="Email"
                type="email"
              />
              <Input
                htmlFor="Password"
                id="password"
                innerHtml="Password"
                name="password"
                placeholder="Password"
                type="password"
              />
              <button
                className="btn btn-default"
                type="submit"
              >
                 Submit 
              </button>
            </form>,
            "className": " col-xs-12 col-md-6",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Input
                  htmlFor="Username"
                  id="username"
                  innerHtml="Username"
                  name="username"
                  placeholder="Username"
                  type="text"
                />,
                <Input
                  htmlFor="Email"
                  id="email"
                  innerHtml="Email"
                  name="email"
                  placeholder="Email"
                  type="email"
                />,
                <Input
                  htmlFor="Password"
                  id="password"
                  innerHtml="Password"
                  name="password"
                  placeholder="Password"
                  type="password"
                />,
                <button
                  className="btn btn-default"
                  type="submit"
                >
                   Submit 
                </button>,
              ],
              "onSubmit": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "handleChange": undefined,
                  "htmlFor": "Username",
                  "id": "username",
                  "innerHtml": "Username",
                  "name": "username",
                  "placeholder": "Username",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "handleChange": undefined,
                  "htmlFor": "Email",
                  "id": "email",
                  "innerHtml": "Email",
                  "name": "email",
                  "placeholder": "Email",
                  "type": "email",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "handleChange": undefined,
                  "htmlFor": "Password",
                  "id": "password",
                  "innerHtml": "Password",
                  "name": "password",
                  "placeholder": "Password",
                  "type": "password",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Submit ",
                  "className": "btn btn-default",
                  "type": "submit",
                },
                "ref": null,
                "rendered": " Submit ",
                "type": "button",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row"
        >
          <div
            className=" col-xs-12 col-md-6"
          >
            <h1>
              StackOverflow-Lite
            </h1>
            <p>
              A platform where people can ask questions and provide answers.
            </p>
          </div>
          <div
            className=" col-xs-12 col-md-6"
          >
            <form>
              <Input
                htmlFor="Username"
                id="username"
                innerHtml="Username"
                name="username"
                placeholder="Username"
                type="text"
              />
              <Input
                htmlFor="Email"
                id="email"
                innerHtml="Email"
                name="email"
                placeholder="Email"
                type="email"
              />
              <Input
                htmlFor="Password"
                id="password"
                innerHtml="Password"
                name="password"
                placeholder="Password"
                type="password"
              />
              <button
                className="btn btn-default"
                type="submit"
              >
                 Submit 
              </button>
            </form>
          </div>
        </div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className=" col-xs-12 col-md-6"
            >
              <h1>
                StackOverflow-Lite
              </h1>
              <p>
                A platform where people can ask questions and provide answers.
              </p>
            </div>,
            <div
              className=" col-xs-12 col-md-6"
            >
              <form>
                <Input
                  htmlFor="Username"
                  id="username"
                  innerHtml="Username"
                  name="username"
                  placeholder="Username"
                  type="text"
                />
                <Input
                  htmlFor="Email"
                  id="email"
                  innerHtml="Email"
                  name="email"
                  placeholder="Email"
                  type="email"
                />
                <Input
                  htmlFor="Password"
                  id="password"
                  innerHtml="Password"
                  name="password"
                  placeholder="Password"
                  type="password"
                />
                <button
                  className="btn btn-default"
                  type="submit"
                >
                   Submit 
                </button>
              </form>
            </div>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  StackOverflow-Lite
                </h1>,
                <p>
                  A platform where people can ask questions and provide answers.
                </p>,
              ],
              "className": " col-xs-12 col-md-6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "StackOverflow-Lite",
                },
                "ref": null,
                "rendered": "StackOverflow-Lite",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "A platform where people can ask questions and provide answers.",
                },
                "ref": null,
                "rendered": "A platform where people can ask questions and provide answers.",
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <form>
                <Input
                  htmlFor="Username"
                  id="username"
                  innerHtml="Username"
                  name="username"
                  placeholder="Username"
                  type="text"
                />
                <Input
                  htmlFor="Email"
                  id="email"
                  innerHtml="Email"
                  name="email"
                  placeholder="Email"
                  type="email"
                />
                <Input
                  htmlFor="Password"
                  id="password"
                  innerHtml="Password"
                  name="password"
                  placeholder="Password"
                  type="password"
                />
                <button
                  className="btn btn-default"
                  type="submit"
                >
                   Submit 
                </button>
              </form>,
              "className": " col-xs-12 col-md-6",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Input
                    htmlFor="Username"
                    id="username"
                    innerHtml="Username"
                    name="username"
                    placeholder="Username"
                    type="text"
                  />,
                  <Input
                    htmlFor="Email"
                    id="email"
                    innerHtml="Email"
                    name="email"
                    placeholder="Email"
                    type="email"
                  />,
                  <Input
                    htmlFor="Password"
                    id="password"
                    innerHtml="Password"
                    name="password"
                    placeholder="Password"
                    type="password"
                  />,
                  <button
                    className="btn btn-default"
                    type="submit"
                  >
                     Submit 
                  </button>,
                ],
                "onSubmit": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "handleChange": undefined,
                    "htmlFor": "Username",
                    "id": "username",
                    "innerHtml": "Username",
                    "name": "username",
                    "placeholder": "Username",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "handleChange": undefined,
                    "htmlFor": "Email",
                    "id": "email",
                    "innerHtml": "Email",
                    "name": "email",
                    "placeholder": "Email",
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "handleChange": undefined,
                    "htmlFor": "Password",
                    "id": "password",
                    "innerHtml": "Password",
                    "name": "password",
                    "placeholder": "Password",
                    "type": "password",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Submit ",
                    "className": "btn btn-default",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": " Submit ",
                  "type": "button",
                },
              ],
              "type": "form",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
